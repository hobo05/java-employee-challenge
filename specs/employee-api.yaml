openapi: 3.0.3
info:
  title: Dummy Rest API Example - OpenAPI 3.0
  description: |-
    This is a Swagger spec for https://dummy.restapiexample.com/
  version: 1.0.11
externalDocs:
  description: Find out more about Dummy Rest API Example
  url: https://dummy.restapiexample.com/
servers:
  - url: https://dummy.restapiexample.com/api/v1
tags:
  - name: employee
    description: Employee operations
paths:
  /employees:
    get:
      tags:
        - employee
      summary: Fetch all employees
      operationId: getAllEmployees
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeListResponse'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
  /employee/{id}:
    get:
      tags:
        - employee
      summary: Fetch single employee
      operationId: getEmployeeById
      parameters:
        - name: id
          in: path
          description: ID of employee to return
          required: true
          schema:
            type: integer
            format: int64
            example: 123
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
        '400':
          description: employee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
  /create:
    post:
      tags:
        - employee
      summary: Add a new employee
      operationId: addEmployee
      requestBody:
        description: Create a new employee
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateModel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeUpdateResponse'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'

  /update/{id}:
    put:
      tags:
        - employee
      summary: Update an employee
      operationId: updateEmployeeById
      parameters:
        - name: id
          in: path
          description: ID of employee to update
          required: true
          schema:
            type: integer
            format: int64
            example: 123
      requestBody:
        description: Update an existing employee
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateModel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
  /delete/{id}:
    delete:
      tags:
        - employee
      summary: Delete an employee
      operationId: deleteEmployeeById
      parameters:
        - name: id
          in: path
          description: ID of employee to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDeleteResponse'
        '400':
          description: employee not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
components:
  schemas:
    EmployeeUpdateModel:
      type: object
      properties:
        name:
          type: string
          example: John Smith
        age:
          type: integer
          example: 42
        salary:
          type: integer
          example: 65000
    EmployeeResponseModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123
        employee_name:
          type: string
          example: John Smith
        employee_age:
          type: integer
          example: 42
        employee_salary:
          type: integer
          example: 65000
        profile_image:
          type: string
    EmployeeListResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiStatus'
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeResponseModel'
        message:
          type: string
          example: Successfully! All records has been fetched.
    EmployeeResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiStatus'
        data:
          $ref: '#/components/schemas/EmployeeResponseModel'
        message:
          type: string
          example: Successfully! Record has been added/fetched/updated/deleted.
    EmployeeUpdateResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiStatus'
        data:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 123
            name:
              type: string
              example: John Smith
            age:
              type: integer
              example: 42
            salary:
              type: integer
              example: 65000
        message:
          type: string
          example: Successfully! Record has been updated.
    EmployeeDeleteResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiStatus'
        data:
          type: string
        message:
          type: string
          example: Successfully! Record has been deleted.
    ApiStatus:
      type: string
      enum:
        - success
        - error
    ApiErrorResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiStatus'
        code:
          type: integer
          example: 400
        errors:
          type: string
          example: id is empty
        message:
          type: string
          example: Not found record
    TooManyRequestsResponse:
      type: object
      properties:
        message:
          type: string
          example: Too Many Attempts